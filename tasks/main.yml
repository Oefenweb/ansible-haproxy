# tasks file for haproxy
---
- name: check version support
  fail:
    msg: "HAProxy version {{ haproxy_version }} is not supported"
  when: haproxy_version not in haproxy_versions_supported
  tags:
    - configuration
    - haproxy
    - haproxy-check-version-support

- name: debug
  debug:
    msg: "What kind of box are we on? => {{ ansible_os_family }}, {{ ansible_distribution }}"
  tags:
    - configuration
    - haproxy
    - haproxy-check-version-support

# include distribution or os family specific defaults and tasks
- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution }}.yml"
    - "../vars/{{ ansible_os_family }}.yml"
  tags:
    - configuration
    - haproxy
    - haproxy-check-version-support

- include: "{{ item }}"
  with_first_found:
   - "{{ ansible_distribution }}.yml"
   - "{{ ansible_os_family }}.yml"
  tags:
    - configuration
    - haproxy
    - haproxy-check-version-support

- name: install dependencies
  apt:
    name: "{{ item.name }}"
    state: "{{ item.state }}"
  with_items: "{{ haproxy_dependencies }}"
  tags:
    - configuration
    - haproxy
    - haproxy-dependencies

- name: install
  apt:
    name: "{{ item }}"
    state: latest
  with_items: "{{ haproxy_install }}"
  tags:
    - configuration
    - haproxy
    - haproxy-install

- name: create certificate files directories
  file:
    path: "{{ item.dest | dirname }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: 0750
  with_items: "{{ haproxy_ssl_map }}"
  tags:
    - configuration
    - haproxy
    - haproxy-configuration
    - haproxy-configuration-ssl

- name: copy certificate files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0640') }}"
  with_items: "{{ haproxy_ssl_map }}"
  notify: restart haproxy
  tags:
    - configuration
    - haproxy
    - haproxy-configuration
    - haproxy-configuration-ssl

- name: update configuration file
  template:
    src: etc/haproxy/haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
    owner: root
    group: root
    mode: 0640
    validate: 'haproxy -f %s -c'
  notify: restart haproxy
  tags:
    - configuration
    - haproxy
    - haproxy-configuration

- name: start and enable service
  service:
    name: haproxy
    state: started
    enabled: true
  tags:
    - configuration
    - haproxy
    - haproxy-start-enable-service
