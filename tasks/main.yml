# tasks file for haproxy
---
- name: check version support
  fail:
    msg: "HAProxy version {{ haproxy_version }} is not supported"
  when: (haproxy_version | regex_replace('([0-9]+.[0-9]+).[0-9]','\\1')) | string not in haproxy_versions_supported
  tags:
    - configuration
    - haproxy
    - haproxy-check-version-support

- include_vars: "{{ ansible_os_family }}.yml"

- import_tasks: "install_ppa.yml"
  tags:
    - configuration
    - haproxy
    - haproxy-install
  when: haproxy_use_ppa

- name: install | Check for existing haproxy installation
  stat:
    path: "/usr/sbin/haproxy"
  register: haproxy_exist
  when: not haproxy_use_ppa

- name: install | Check for existing haproxy version
  shell: /usr/sbin/haproxy -v | head -1 | sed 's/HA-Proxy version \([0-9]\.[0-9]\.[0-9]\+\).*/\1/'
  register: haproxy_version_installed
  when: ("haproxy_exist.stat.exists") and (not haproxy_use_ppa)
  changed_when: False
  failed_when: False

- import_tasks: "install_src.yml"
  tags:
    - configuration
    - haproxy
    - haproxy-install
  when: (haproxy_full_version != haproxy_version_installed.stdout) and (not haproxy_use_ppa)

- import_tasks: "user.yml"
  tags:
    - configuration
    - haproxy
    - haproxy-user

- import_tasks: certificates.yml
  tags:
    - configuration
    - haproxy
    - haproxy-certificates

- import_tasks: acl.yml
  tags:
    - configuration
    - haproxy
    - haproxy-acl

- import_tasks: configuration.yml
  tags:
    - configuration
    - haproxy
    - haproxy-configuration

- name: start and enable service
  service:
    name: haproxy
    state: "{{ service_default_state | default('started') }}"
    enabled: "{{ service_default_enabled | default(true) | bool }}"
  tags:
    - configuration
    - haproxy
    - haproxy-start-enable-service
